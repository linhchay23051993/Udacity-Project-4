name: CD for frontend app

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'starter/frontend/**'
env:
  NODE_VERSION: 18.x

jobs:
  Lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: install dependencis
        run: npm install

      - name: run lint
        run: npm run lint
  
  Test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/frontend
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: install dependencis
        run: npm install

      - name: run test
        run: npm run test

  Build:
    needs: [Lint,Test]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: install dependencis
        run: npm install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Login to ecr
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: push docker 
        run: |
          aws eks update-kubeconfig --name cluster
          export REACT_APP_MOVIE_API_URL=$(kubectl get svc backend -o=jsonpath='{.status.loadBalancer.ingress[0].hostname}{"\n"}{.status.loadBalancer.ingress[0].ip}')
          echo "REACT_APP_MOVIE_API: ${REACT_APP_MOVIE_API}"
          docker build --build-arg REACT_APP_MOVIE_API_URL=http://$REACT_APP_MOVIE_API_URL --tag ${{vars.IMAGE_FRONTEND_TAG}} .
          docker push ${{vars.IMAGE_FRONTEND_TAG}}
    
      - name: deloy to eks
        working-directory: ./starter/frontend/k8s
        run: |
          aws eks update-kubeconfig --name cluster --region us-east-1
          kustomize edit set image frontend=${{vars.IMAGE_FRONTEND_TAG}}
          kustomize build | kubectl apply -f -
